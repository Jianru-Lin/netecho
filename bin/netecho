#!/usr/bin/env node

var m = require('../index')
var yargs = require('yargs')
var argv = yargs.usage('netecho <command> [options]')
                .command('udp', 'start an udp echo server', udp_command)
                .command('tcp', 'start an tcp echo server', tcp_command)
                .wrap(null)
                .argv

var command = argv._[0]
if (!command) {
   yargs.showHelp()
}

function udp_command(yargs) {
   argv = yargs.option('p', {alias: 'port', demand: true})
               .option('h', {alias: 'host', demand: true})
               .option('m', {alias: 'mode', demand: false})
               .usage('netecho udp -h <host> -p <port> [-m <normal|random>]')
               .help('help')
               .argv

   if (!argv.port || !argv.host) {
      return
   }

   var mode = 'normal'

   if (argv.m) {
      if (/^normal$/i.test(argv.m)) {
        mode = 'normal'
      }
      else if (/^random$/i.test(argv.m)) {
        mode = 'random'
      }
      else {
        return
      }
   }

   var opt = {
      port: argv.port,
      host: argv.host,
      mode: mode
   }
   m.udp_echo_server(opt)
}

function tcp_command(yargs) {
   argv = yargs.option('p', {alias: 'port', demand: true})
               .option('h', {alias: 'host', demand: true})
               .usage('netecho tcp -h <host> -p <port>')
               .help('help')
               .argv

   if (!argv.port || !argv.host) {
      return
   }

   var opt = {
      port: argv.port,
      host: argv.host
   }
   m.tcp_echo_server(opt)
}